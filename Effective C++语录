1.
initialization和assignment之间的差异在于前者由constructor执行，后者由operator=执行。
C++严格区分此二者，原因是上述两个函数所考虑的事情不同。
    Constructors通常必须检验其参数的有效性，而大部分assignment运算服不必如此，因为其引数必然是合法的。
    另一方面，assignment动作的目标对象并非是尚未构造完成的对象，而是可能已经拥有配置得来的资源。在新资源可被赋值过去之前，旧资源通常
必须先行释放。这里所谓的资源通常是指内存。在assignment运算符为一个新值配置内存之前，必须先释放旧值的内存。
    constructor必须检验其参数的有效性，并确保member data都被适当地初始化，例如一个char *指针必须被适当地加上null结束字符。
assignment运算符认定其参数是合法的，反倒是它会侦测诸如“自己赋值给自己”这样的病态情况，或是集中心力确保“配置新内存之前先释放旧有内存”

2.
class 里面的pointer member需注意一下几点：
    1.在每一个constructors中将该指针初始化。如果没有任何一个constructor会将内存配置给该指针，


3.
    如果你的class拥有任何指针，那么请撰写你自己的copy constructor和assignment operator。
    当肯定不会用到copy constructor和assignment operator时，把这些函数声明为private，并且不要定义（实现）之。这可以阻止clients调用它们，
也可以避免编译器产生它们。
