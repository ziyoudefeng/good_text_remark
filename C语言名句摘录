1、C语言标准对x/y的定义是：(x/y)*y + x%y = x。因此对于当其中某个操作数为负数时的情况，就可以根据这个来判定x/y与x%y的结果。

2、许多分配操作具有下述形式：
  struct T *p;
  p = Mem_alloc(sizeof (struct T));
即为结构T的一个实例分配内存块，返回指向块的一个指针。该惯用法的一个更好的版本如下：
  p = Mem_alloc(sizeof *p);
对void指针以外的任何指针类型，都可以使用sizeof *p代替sizeof (struct T)，sizeof *p的好处在于，这种用法不依赖指针指向的
类型。如果*p的类型发生了改变，这种分配方式仍然是正确的，但使用sizeof (struct T)的分配则必须改变，以反映*p类型的变化。
p = Mem_alloc(sizeof (struct T));仅当p确实指向struct T实例的指针时，才是正确的。如果p改为指向另一个结构的指针而不更新
该调用，那么上述调用有可能分配过多的内存，这会浪费空间，也有可能分配太少的内存。
